# Define the raw data as a list of lists (each row is a list of strings from the original table)
raw_data = [
    ["C1", "96.88", "96.40", "96.52", "96.88", "96.39", "96.51", "96.11", "95.50", "95.65"],
    ["C2", "92.85", "93.07", "93.46", "91.87", "92.32", "92.58", "91.14", "91.46", "91.91"],
    ["C3", "97.43", "97.33", "97.54", "97.97", "97.83", "98.00", "96.95", "96.81", "97.06"],
    ["C4", "92.25", "92.27", "92.29", "85.47", "85.47", "85.49", "88.11", "88.14", "88.16"],
    ["C5", "80.28", "80.73", "80.57", "62.55", "63.49", "63.18", "68.67", "69.46", "69.18"],
    ["C6", "98.51", "98.33", "98.43", "98.51", "98.09", "98.42", "98.29", "98.09", "98.20"],
    ["C7", "89.96", "91.78", "91.95", "90.71", "90.17", "93.21", "87.43", "90.17", "90.40"],
    ["C8", "89.42", "89.41", "88.83", "86.21", "86.88", "85.54", "86.82", "86.88", "86.07"],
    ["C9", "87.14", "86.51", "86.91", "72.48", "80.86", "73.43", "81.50", "80.86", "81.40"],
    ["C10", "82.70", "79.92", "79.22", "62.91", "69.24", "56.01", "73.73", "69.24", "68.20"],
    ["C11", "95.28", "95.15", "95.27", "95.32", "95.20", "95.30", "94.81", "94.66", "94.80"],
    ["C12", "77.50", "76.01", "77.37", "78.71", "76.88", "78.35", "74.61", "72.87", "74.43"],
    ["C13", "86.75", "86.43", "86.69", "72.15", "70.42", "71.43", "82.07", "81.56", "81.94"],
    ["C14", "78.29", "78.30", "78.40", "66.22", "66.39", "66.48", "69.59", "69.62", "69.75"],
    ["C15", "73.35", "72.71", "72.70", "50.56", "52.24", "52.50", "59.02", "58.53", "58.56"],
    ["C16", "94.75", "93.62", "92.01", "94.72", "93.54", "91.82", "94.00", "92.71", "90.87"],
    ["C17", "93.07", "92.63", "92.86", "94.22", "93.94", "94.19", "92.15", "91.67", "91.94"],
    ["C18", "92.85", "92.56", "92.57", "89.03", "88.41", "88.39", "90.57", "90.18", "90.19"],
    ["C19", "87.72", "88.49", "88.60", "78.25", "79.33", "79.57", "81.68", "82.85", "83.04"],
    ["C20", "75.75", "75.29", "75.32", "52.48", "51.16", "51.25", "63.73", "63.05", "63.10"],
    ["N1", "98.17", "97.87", "96.50", "98.52", "98.29", "97.38", "97.93", "97.59", "96.06"],
    ["N2", "93.05", "92.43", "92.39", "91.41", "91.10", "91.19", "91.93", "91.28", "91.25"],
    ["N3", "91.76", "81.76", "91.13", "81.01", "71.64", "80.54", "88.60", "77.55", "87.92"],
    ["N4", "90.60", "90.97", "91.45", "74.31", "75.44", "75.95", "85.58", "86.29", "86.92"],
    ["N5", "89.10", "89.07", "89.09", "69.80", "69.71", "69.73", "80.77", "80.71", "80.74"],
    ["N6", "94.01", "93.84", "93.28", "94.97", "94.86", "94.43", "92.97", "92.78", "92.13"],
    ["N7", "95.24", "95.84", "96.48", "94.24", "94.55", "94.99", "94.33", "95.00", "95.70"],
    ["N8", "92.55", "92.51", "91.78", "81.64", "81.47", "80.90", "88.73", "88.66", "87.84"],
    ["N9", "91.39", "89.32", "90.14", "69.30", "67.96", "68.48", "84.66", "81.97", "83.00"],
    ["N10", "88.63", "88.85", "88.56", "55.91", "56.41", "56.28", "79.06", "79.47", "79.09"],
    ["N11", "96.80", "95.89", "96.35", "97.57", "96.86", "97.22", "95.21", "93.84", "94.52"],
    ["N12", "98.48", "98.02", "97.11", "98.78", "97.88", "96.17", "97.68", "96.88", "95.28"],
    ["N13", "94.66", "94.52", "93.67", "85.79", "85.91", "85.68", "92.06", "91.93", "91.01"],
    ["N14", "93.21", "92.96", "93.02", "71.69", "72.43", "72.56", "87.85", "87.55", "87.66"],
    ["N15", "88.25", "89.68", "89.56", "61.81", "63.61", "63.51", "78.34", "81.00", "80.78"],
    ["N16", "87.98", "86.91", "88.58", "88.38", "87.69", "89.00", "86.47", "85.27", "87.16"],
    ["N17", "93.18", "91.84", "92.89", "91.82", "91.07", "91.92", "91.96", "90.50", "91.66"],
    ["N18", "92.87", "93.33", "93.27", "79.15", "79.35", "79.12", "89.22", "89.77", "89.68"],
    ["N19", "92.83", "91.74", "90.87", "69.94", "67.89", "66.61", "87.17", "85.33", "83.92"],
    ["N20", "88.90", "88.81", "88.84", "60.57", "60.71", "60.78", "79.56", "79.56", "79.61"]
]

# Convert each row's specific columns to float, find max and bold the max value
latex_rows = []
for row in raw_data:
    label = row[0]
    # Convert columns 2-4, 5-7, and 8-10 to float and determine the max value
    for group_start in [1, 4, 7]:
        group = list(map(float, row[group_start:group_start+3]))
        max_value = max(group)
        # Format the max value with \textbf{} and keep other values unchanged
        formatted_group = [f"\\textbf{{{value}}}" if value == max_value else f"{value:.2f}" for value in group]
        row[group_start:group_start+3] = formatted_group
    latex_rows.append(label + " & " + " & ".join(row[1:]) + " \\\\")
latex_output = "\n".join(latex_rows)
file_path = './FormattedLaTeXData.txt'
with open(file_path, 'w') as file:
    file.write(latex_output)
# ``` &#8203;``【oaicite:0】``&#8203;
